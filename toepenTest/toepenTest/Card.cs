using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace toepenTest
{
    public class Card
    {
        private String type;
        private int points;

        public Card(String type)
        {
            this.type = type;
            points = CalculatePoints(type);
            Console.WriteLine("Punten -> " + points);
        }

        public int GetPoints()
        {
            return points;
        }

        public override string ToString()
        {
            return type;
        }

        /// <summary>
        /// Calculate the points for the card based on
        /// a substring that starts at the second character and
        /// ends at the end of the string.
        /// </summary>
        /// <param name="type">The short name of the card</param>
        /// <returns>The points for the card. When no type matches -1 is returned.</returns>
        public static int CalculatePoints(String type)
        {
            String numberCard = type.Substring(1);
            Console.WriteLine("numberCard -> " + numberCard.ToString());
            switch (numberCard)
            {
                case "10":
                    return 100;
                case "9":
                    return 90;
                case "8":
                    return 80;
                case "7":
                    return 70;
                case "A":
                    return 60;
                case "K":
                    return 50;
                case "Q":
                    return 40;
                case "J":
                    return 30;
                default:
                    return -1;
            }
        }
    }
}
