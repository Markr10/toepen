using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;

namespace toepenTest.Connection
{
    public static class Conn
    {
        private static int portServer = 5342;
        private static Server server;
        private static Client client;

        /// <summary>
        /// Connection constructor
        /// </summary>
        static Conn()
        {
            server = null;
            client = null;
        }

        public static void StartConnectionForServer()
        {
            if (client == null)
            {
                startServer();
                startServerClient();
            }
        }

        public static void StartConnectionForClient(string ipAddressClient)
        {
            if (client == null)
            {
                startClient(ipAddressClient);
            }
        }

        /// <summary>
        /// Start the server, if needed.
        /// </summary>
        private static void startServer()
        {
            server = new Server(portServer);
        }

        /// <summary>
        /// Start the client on the machine that is also the server.
        /// </summary>
        private static void startServerClient()
        {
            //make connection to server
            string ip = GetLocalIP();

            client = new Client(ip, portServer);
        }

        /// <summary>
        /// Start the client.
        /// </summary>
        private static void startClient(string ipAddressForConnection)
        {
            //make connection to server
            string ip = ipAddressForConnection;

            client = new Client(ip, portServer);
        }

        /// <summary>
        /// Return the client.
        /// If no client exist, then it return null.
        /// </summary>
        /// <returns>The client, otherwise null</returns>
        public static Client getClient()
        {
            return client;
        }

        /// <summary>
        /// Return the server.
        /// If no server exist, then it return null.
        /// </summary>
        /// <returns>The server, otherwise null</returns>
        public static Server getServer()
        {
            return server;
        }

        /// <summary>
        /// Get IP address of the computer.
        /// </summary>
        /// <returns>Returns the IPAddress of the computer as IPAddress object.</returns>
        public static IPAddress GetIP()
        {
            string strHostName = System.Net.Dns.GetHostName();

            IPHostEntry ipEntry = System.Net.Dns.GetHostEntry(strHostName);

            IPAddress[] addr = ipEntry.AddressList;

            return addr[0];
        }

        public static string GetLocalIP()
        {
            string localIP = String.Empty;
            IPHostEntry host = Dns.GetHostEntry(Dns.GetHostName());

            foreach (IPAddress ip in host.AddressList)
            {
                if (ip.AddressFamily == AddressFamily.InterNetwork)
                {
                    localIP = ip.ToString();
                }
            }
            return localIP;
        }
    }
}
