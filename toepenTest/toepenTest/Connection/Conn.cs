using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;

namespace toepenTest.Connection
{
    public static class Conn
    {
        private static Server server;
        private static ClientConn client;

        /// <summary>
        /// Connection constructor
        /// </summary>
        static Conn()
        {
            server = null;
            client = null;
        }

        public static void StartConnection(Boolean isServer)
        {
            if (client == null)
            {
                if (isServer)
                {
                    startServer();
                }
                startClient();
            }
        }

        /// <summary>
        /// Start the server, if needed.
        /// </summary>
        private static void startServer()
        {
            server = new Server(5342);
        }

        /// <summary>
        /// Start the client.
        /// </summary>
        private static void startClient()
        {
            //make connection to server
            string ip = GetLocalIP();
            Console.WriteLine(ip);
            int port = 5342;

            client = new ClientConn(ip, port);
        }

        // Not needed use Environment.Exit(0); instead
        ///// <summary>
        ///// Stop the threads that are needed for the connections.
        ///// </summary>
        //public static void stopConnections()
        //{
        //    server.stop();
        //    //client.
        //}

        /// <summary>
        /// Return the client.
        /// If no client exist, then it return null.
        /// </summary>
        /// <returns>The client, otherwise null</returns>
        public static ClientConn getClient()
        {
            return client;
        }

        /// <summary>
        /// Get IP address of the computer.
        /// </summary>
        /// <returns>Returns the IPAddress of the computer as IPAddress object.</returns>
        public static IPAddress GetIP()
        {
            string strHostName = System.Net.Dns.GetHostName();

            IPHostEntry ipEntry = System.Net.Dns.GetHostEntry(strHostName);

            IPAddress[] addr = ipEntry.AddressList;

            return addr[0];
        }

        public static String GetLocalIP()
        {
            string localIP = String.Empty;
            IPHostEntry host = Dns.GetHostEntry(Dns.GetHostName());

            foreach (IPAddress ip in host.AddressList)
            {
                if (ip.AddressFamily == AddressFamily.InterNetwork)
                {
                    localIP = ip.ToString();
                }
            }
            return localIP;
        }
    }
}
